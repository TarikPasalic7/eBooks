// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eKnjige.WebaAPI.Data;

namespace eKnjige.WebaAPI.Migrations
{
    [DbContext(typeof(Data.AppContext))]
    [Migration("20200730202716_migration4")]
    partial class migration4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eKnjige.WebaAPI.Autor", b =>
                {
                    b.Property<int>("AutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Godiste")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorID");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Drzava", b =>
                {
                    b.Property<int>("DrzavaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrzavaID");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjiga", b =>
                {
                    b.Property<int>("EKnjigaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<bool>("MP3Dodan")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Mp3file")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OcjenaKnjige")
                        .HasColumnType("real");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PDFDodan")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Pdffile")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("EKnjigaID");

                    b.HasIndex("AdministratorID");

                    b.ToTable("EKnjige");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjigaKategorija", b =>
                {
                    b.Property<int>("EKnjigaKategorijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EKnjigaID")
                        .HasColumnType("int");

                    b.Property<int>("KategorijaID")
                        .HasColumnType("int");

                    b.HasKey("EKnjigaKategorijaID");

                    b.HasIndex("EKnjigaID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("EKnjigaKategorije");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjigaTip", b =>
                {
                    b.Property<int>("EKnjigaTipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EKnjigaID")
                        .HasColumnType("int");

                    b.Property<int>("TipFajlaID")
                        .HasColumnType("int");

                    b.HasKey("EKnjigaTipID");

                    b.HasIndex("EKnjigaID");

                    b.HasIndex("TipFajlaID");

                    b.ToTable("EKnjigaTipovi");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjigeAutor", b =>
                {
                    b.Property<int>("EKnjigeAutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutorID")
                        .HasColumnType("int");

                    b.Property<int>("EKnjigaID")
                        .HasColumnType("int");

                    b.HasKey("EKnjigeAutorID");

                    b.HasIndex("AutorID");

                    b.HasIndex("EKnjigaID");

                    b.ToTable("EKnjigaAutori");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Kategorija", b =>
                {
                    b.Property<int>("KategorijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaID");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Klijent", b =>
                {
                    b.Property<int>("KlijentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpolID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KlijentID");

                    b.HasIndex("GradID");

                    b.HasIndex("SpolID");

                    b.HasIndex("UlogaID");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.KlijentKnjigaOcijena", b =>
                {
                    b.Property<int>("KlijentKnjigaOcijenaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumOcijene")
                        .HasColumnType("datetime2");

                    b.Property<int>("EKnjigaID")
                        .HasColumnType("int");

                    b.Property<int>("KlijentID")
                        .HasColumnType("int");

                    b.Property<float>("Ocjena")
                        .HasColumnType("real");

                    b.HasKey("KlijentKnjigaOcijenaID");

                    b.HasIndex("EKnjigaID");

                    b.HasIndex("KlijentID");

                    b.ToTable("KlijentKnjigaOcijene");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Komentar", b =>
                {
                    b.Property<int>("KomentarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKomentara")
                        .HasColumnType("datetime2");

                    b.Property<int>("EKnjigaID")
                        .HasColumnType("int");

                    b.Property<int>("KlijentID")
                        .HasColumnType("int");

                    b.Property<string>("komentar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KomentarId");

                    b.HasIndex("EKnjigaID");

                    b.HasIndex("KlijentID");

                    b.ToTable("Komentari");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.KupovinaKnjige", b =>
                {
                    b.Property<int>("KupovinaKnjigeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKupovine")
                        .HasColumnType("datetime2");

                    b.Property<int>("EKnjigaID")
                        .HasColumnType("int");

                    b.Property<int>("KlijentID")
                        .HasColumnType("int");

                    b.HasKey("KupovinaKnjigeID");

                    b.HasIndex("EKnjigaID");

                    b.HasIndex("KlijentID");

                    b.ToTable("KupovinaKnjiga");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.PrijedlogKnjiga", b =>
                {
                    b.Property<int>("PrijedlogKnjigeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Odgovoren")
                        .HasColumnType("bit");

                    b.HasKey("PrijedlogKnjigeID");

                    b.HasIndex("KlijentID");

                    b.ToTable("PrijedlogKnjiga");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Spol", b =>
                {
                    b.Property<int>("SpolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpolID");

                    b.ToTable("Spol");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.TipFajla", b =>
                {
                    b.Property<int>("TipFajlaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipFajlaID");

                    b.ToTable("TipFajlova");
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjiga", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.Klijent", "Administrator")
                        .WithMany()
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjigaKategorija", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.EKnjiga", "Eknjiga")
                        .WithMany()
                        .HasForeignKey("EKnjigaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjigaTip", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.EKnjiga", "Eknjiga")
                        .WithMany()
                        .HasForeignKey("EKnjigaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.TipFajla", "Tipfajla")
                        .WithMany()
                        .HasForeignKey("TipFajlaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.EKnjigeAutor", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.EKnjiga", "EKnjiga")
                        .WithMany()
                        .HasForeignKey("EKnjigaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Grad", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Klijent", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.Spol", "Spol")
                        .WithMany()
                        .HasForeignKey("SpolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.Database.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.KlijentKnjigaOcijena", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.EKnjiga", "Eknjiga")
                        .WithMany()
                        .HasForeignKey("EKnjigaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.Komentar", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.EKnjiga", "EKnjiga")
                        .WithMany()
                        .HasForeignKey("EKnjigaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.KupovinaKnjige", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.EKnjiga", "EKnjiga")
                        .WithMany()
                        .HasForeignKey("EKnjigaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eKnjige.WebaAPI.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("eKnjige.WebaAPI.PrijedlogKnjiga", b =>
                {
                    b.HasOne("eKnjige.WebaAPI.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
